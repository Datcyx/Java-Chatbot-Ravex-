/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projectravex;
import java.io.*;
import com.sun.speech.freetts.*;
import com.sun.speech.freetts.VoiceManager;
import javax.swing.JFrame;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
/**
 *
 * @author HomePC
 */
class brain {
     private String db_url = "jdbc:mysql://localhost/ravendictionary";
    private String user = "root";
    private String pass = "";
    
    public Statement getconnect(){
         Connection con;
         Statement stmt = null;
        try {
            con = DriverManager.getConnection(db_url, user, pass);
            stmt = con.createStatement();
        } catch (SQLException ex) {
           System.out.println("error: " + ex.getMessage());
        }
        return stmt;
    }
}

public class RavexUi extends javax.swing.JFrame  {

    /**
     * Creates new form RavexUi
    int  */
    public RavexUi() {
        initComponents();
                thread.start();  
                try{
                      System.setProperty("freetts.voices", "com.sun.speech.freetts.en.us.cmu_us_kal.KevinVoiceDirectory");
    voice = VoiceManager.getInstance().getVoice("kevin16");
    voice.allocate();// Allocating Voice
   voice.setRate(160);// Setting the rate of the voice
            voice.setPitch(120);// Setting the Pitch of the voice
            voice.setVolume(10);// Setting the volume of the voice
           

                brain dbs = new brain();
                Statement stmt = dbs.getconnect();
                
                String checkhost = "SELECT * FROM `knowledge` WHERE words1 LIKE '%hello%' AND words2 LIKE '%%'"; 
            ResultSet rsx = stmt.executeQuery(checkhost);
            while(rsx.next()){
                  String respondsd = rsx.getString("respond");
                respond.append("\n"+respondsd);
               voice.speak(respondsd);
                
                
            }
                }catch (Exception ex) {
                    String ff= ex.toString();
                       respond.setText(ff);
                respond.setForeground(new java.awt.Color(255, 51, 51));
            ERROR.setText("RAVEN IS CURENTLY OFFLINE");
            ERROR1.setText("OR SOMETHING WENT WRONG!");
            respond.setBackground(new java.awt.Color(204, 255, 0));
        } 
    }
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        userst = new javax.swing.JTextField();
        ERROR = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        respond = new javax.swing.JTextArea();
        cprog = new javax.swing.JProgressBar();
        bot = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        think = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        ERROR1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Raven Project");
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(255, 55, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(150, 150));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        userst.setText("Enter your Question");
        jPanel1.add(userst);
        userst.setBounds(90, 240, 253, 40);

        ERROR.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        ERROR.setForeground(new java.awt.Color(153, 0, 0));
        jPanel1.add(ERROR);
        ERROR.setBounds(70, 100, 320, 50);

        jButton1.setText("Ask");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(350, 240, 72, 40);

        respond.setEditable(false);
        respond.setBackground(new java.awt.Color(0, 0, 255));
        respond.setColumns(20);
        respond.setForeground(new java.awt.Color(255, 255, 255));
        respond.setRows(5);
        respond.setText("Raven Responds:");
        jScrollPane1.setViewportView(respond);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(60, 160, 369, 43);

        cprog.setBackground(new java.awt.Color(0, 0, 153));
        cprog.setValue(3);
        jPanel1.add(cprog);
        cprog.setBounds(60, 210, 362, 24);

        bot.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projectravex/output-onlinegiftools.gif"))); // NOI18N
        jPanel1.add(bot);
        bot.setBounds(160, 70, 140, 80);

        jLabel6.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 0, 0));
        jLabel6.setText("RAVEN IS CURENTLY OFFLINE");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(60, 150, 320, 50);

        jPanel3.setBackground(new java.awt.Color(0, 0, 204));
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));

        think.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(222, Short.MAX_VALUE)
                .addComponent(think, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(179, 179, 179))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(think)
                .addContainerGap())
        );

        jPanel1.add(jPanel3);
        jPanel3.setBounds(0, 10, 530, 30);
        jPanel1.add(jSeparator1);
        jSeparator1.setBounds(0, 0, 480, 10);

        jPanel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel2MouseDragged(evt);
            }
        });
        jPanel2.setLayout(null);

        jLabel3.setBackground(java.awt.Color.white);
        jLabel3.setText("Raven UI 1.0");
        jLabel3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel3MouseDragged(evt);
            }
        });
        jPanel2.add(jLabel3);
        jLabel3.setBounds(10, 10, 80, 16);

        jLabel2.setBackground(new java.awt.Color(0, 102, 102));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projectravex/minimize_b.png"))); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel2);
        jLabel2.setBounds(400, 10, 40, 25);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projectravex/close_b.png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel1);
        jLabel1.setBounds(430, 10, 40, 25);

        ERROR1.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        ERROR1.setForeground(new java.awt.Color(153, 0, 0));
        jPanel2.add(ERROR1);
        ERROR1.setBounds(0, 40, 470, 40);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    int i = 0;
int s = 0;
int finish = 0;
String finalans ="";
Voice voice;
int answered = 0;
int confuse = 0;
int whotrig = 0;
int confusion = 0;
mythread thread = new mythread();
    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
      System.exit(0);
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        setState(JFrame.ICONIFIED);         // TODO add your handling code here:
    }//GEN-LAST:event_jLabel2MouseClicked
 private static final String VOICENAME="kevin16";
 
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
  
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jLabel3MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseDragged
   
    }//GEN-LAST:event_jLabel3MouseDragged

    private void jPanel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseDragged
        int x = evt.getXOnScreen();
         int y = evt.getYOnScreen();
         this.setLocation(x, y);
    }//GEN-LAST:event_jPanel2MouseDragged

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
   
        try {
          
        System.setProperty("freetts.voices", "com.sun.speech.freetts.en.us.cmu_us_kal.KevinVoiceDirectory");
    voice = VoiceManager.getInstance().getVoice("kevin16");
    voice.allocate();// Allocating Voice
   voice.setRate(160);// Setting the rate of the voice
            voice.setPitch(120);// Setting the Pitch of the voice
            voice.setVolume(10);// Setting the volume of the voice
           

            String query =userst.getText();
            finish = 1;
            String question = query.toLowerCase();
             String alls ="";
              String all ="";
              String bs ="";
         
            brain db = new brain();
            Statement stmt = db.getconnect();
            int trigger = 0;
                 Voice voice; 
                
          
            if(question.length()> 11 && question.contains("do you know") && trigger == 0){
               
             all = "do you know";
             alls = question.substring(11, question.length());
             trigger = 1;
             String xx = alls.replace("?", "");
              bs = xx.replaceAll("\\s+", "");
              
            
       
            }else if(question.length()> 11 && question.contains("what is your") && trigger == 0){
               
             all = "what is your";
             alls = question.substring(12, question.length());
             trigger = 1;
              String xx = alls.replace("?", "");
              bs = xx.replaceAll("\\s+", "");
              
           
             
       
            }else if(question.length()> 4 && question.contains("i am") && trigger == 0){
               
             all = "i am";
             alls = question.substring(5, question.length());
             trigger = 1;
              String ss = alls.replace("?", "");
        
              
           
             
       
            }else if(question.length()> 11 && question.contains("what is your") && trigger == 0){
               
             all = "what is your";
             alls = question.substring(12, question.length());
             trigger = 1;
             String xx = alls.replace("?", "");
              bs = xx.replaceAll("\\s+", "");
              
           
             
       
            
           
             
       
            }else if(question.length()> 7 && question.contains("who is") && trigger == 0){
               
             all = "who is";
             alls = question.substring(7, question.length());
             trigger = 1;
              String xx = alls.replace("?", "");
             bs = xx;
          whotrig = 1;
              
           
             
       
            }else{
                 String xx = question.replace("?", "");
               all = xx;
               
           }
          
             System.out.println(bs);
             System.out.println(all);
            
             String querys = "SELECT * FROM `knowledge` WHERE words1 LIKE '%"+all+"%' AND words2 LIKE '%"+bs+"%'"; 
            ResultSet rs = stmt.executeQuery(querys);
            
            if (!rs.next() ) {
                confusion =1;
                if(whotrig == 1 && all.equals("who is")){
                    int choice = (int)(Math.random() * 1);
                    if(choice == 0){
                          finalans="I dont know this person";
                       whotrig = 0;
                         answered = 0;
                    }else{
                          finalans="I dont know"+alls;
                       whotrig = 0;
                         answered = 0;
                    }
                   
                }else if(answered != 0 && question.equals("really?")){
                    int res = (int)(Math.random() * 2);
                    if(res == 0){
                       finalans="I think so";
                       answered = 0;
                       
                } else if(res == 1){
                       finalans="Yes";
                       answered = 0;
                       
                }else{
                       finalans="Absolutely";
                       answered = 0;
                       
                }
        }else if(answered != 0 && question.equals("really")){
                    int res = (int)(Math.random() * 2);
                    if(res == 0){
                       finalans="I think so";
                       answered = 0;
                       
                } else if(res == 1){
                       finalans="Yes";
                       answered = 0;
                       
                }else{
                       finalans="Absolutely";
                       answered = 0;
                       
                }
        }else if(answered == 0 && question.equals("really?"))     {
            confuse = 1;
                 int res = (int)(Math.random() * 2);
                if(res == 0){
                       finalans="really what?";
                       
                       
                } else if(res == 1){
                       finalans="huh?";
                       
                }if(res == 2){
                       finalans="I dont understand mate";
                       
                }
            }else if(answered == 0 && question.equals("really"))     {
                 confuse =1;
                int res = (int)(Math.random() * 2);
                if(res == 0){
                       finalans="really what?";
                       
                } else if(res == 1){
                       finalans="huh?";
                       
                }if(res == 2){
                       finalans="I dont understand mate";
                       
                }
            }else{
                confuse = 1;
                   finalans="sorry i dont understand";
   respond.setCaretPosition(respond.getDocument().getLength());
            }

} else {
                
    do {
    // System.out.println("first name: " + rs.getString("email"));
                  
                   
               String words2 = rs.getString("words2");
                 String responds = rs.getString("respond");
                  
           
                 
               if(alls.contains(words2)){
                  finalans = responds;
                   if(bs.isEmpty()){
                 answered = 0;
             }else{
                   answered+=1;
                   }
                 
               }
            
    } while (rs.next());
            
          
           }
                    
          
    
             
        } catch (Exception ex) {
            ERROR.setText("RAVEN IS CURENTLY OFFLINE");
            ERROR1.setText("OR SOMETHING WENT WRONG!");
            respond.setBackground(new java.awt.Color(204, 255, 0));
            System.out.println(ex);
        }         // TODO add your handling code here:
    }//GEN-LAST:event_jButton1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RavexUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RavexUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RavexUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RavexUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RavexUi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ERROR;
    private javax.swing.JLabel ERROR1;
    private javax.swing.JLabel bot;
    private javax.swing.JProgressBar cprog;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea respond;
    private javax.swing.JLabel think;
    private javax.swing.JTextField userst;
    // End of variables declaration//GEN-END:variables

class mythread extends Thread
{
    @Override
    public void run()
    {
        try {
                while(true){
                   Thread.sleep(1);
              
                    i++;
                       
               if(finish == 0){
                   confuse = 0;
                   userst.setEnabled(true);
                   jButton1.setEnabled(true);
                   think.setText("");
                   confuse = 0;
                    whotrig = 0;
                   bot.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projectravex/steady.gif"))); // NOI18N
               }else{
                   userst.setEnabled(false);
                    jButton1.setEnabled(false);
                    if(i>1000){
                        
                       s= s+20;
                         cprog.setValue(s);
                        i=0;
                        System.out.println(s);
// NOI18N
                             if(confuse == 1){
                                  bot.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projectravex/confuse.gif"))); // NOI18N
      
                     
                             }
                            if(s == 20){
                                             bot.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projectravex/blink.gif"))); 
                        think.setText("Thinking.");
                    }else if(s ==40){
                        if(confusion > 0){
                                    think.setText("confuse..");
                        }else{
                              think.setText("Thinking...");
                        }
                    }else if(s == 80){
                      
                        if(confusion > 0){
                                    think.setText("confuse..");
                        }else{
                              think.setText("Thinking...");
                        }
                    }else if(s == 100){
                     if(confusion > 0){
                                    think.setText("confuse..");
                        }else{
                              think.setText("Thinking...");
                        }
                    }else if(s == 119){
                       if(confusion > 0){
                                    think.setText("confuse..");
                        }else{
                              think.setText("Thinking...");
                        }
                    }
                        if(s == 100){
                            finish = 0;
                            s = 0;
                              cprog.setValue(0);
                              i=0;
                              respond.append("\n"+finalans);
                               respond.setCaretPosition(respond.getDocument().getLength());
                              voice.speak(finalans);
                              userst.setText("");
                           
                               System.out.println(answered);
                              
                        }
                        
                        
                    }
                    
               }
               
                }
        }catch (InterruptedException ex) {
              
            }
                
    }
    }
}
